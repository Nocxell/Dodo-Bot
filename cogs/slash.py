import disnake
from disnake import Embed, Member
from disnake.ext import commands
import os
import pymongo
import random
import psutil
import json
import time
import aiohttp
import sqlite3
import asyncio
from asyncio import sleep

class Dropdown(disnake.ui.Select):
    def __init__(self):
        options = [
            disnake.SelectOption(label='–≠–∫–æ–Ω–æ–º–∏–∫–∞', emoji='üèõÔ∏è'),
            disnake.SelectOption(label='–ú–æ–¥–µ—Ä–∞—Ü–∏—è', emoji='üõ°'),
            disnake.SelectOption(label='–ù–∞—Å—Ç—Ä–æ–π–∫–∏', emoji='‚öô'),
            disnake.SelectOption(label='–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', emoji='üòÅ'),
            disnake.SelectOption(label='–£—Ç–∏–ª–∏—Ç—ã', emoji='‚ú®'),
            disnake.SelectOption(label='–î—Ä—É–≥–æ–µ', emoji='üëæ'),
        ]
        super().__init__(placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                         min_values=1,
                         max_values=1,
                         options=options)

    async def callback(self, interaction: disnake.Interaction):
        if self.values[0] == '–≠–∫–æ–Ω–æ–º–∏–∫–∞':
            embed = disnake.Embed(
                title="–ö–æ–º–∞–Ω–¥—ã —ç–∫–æ–Ω–æ–º–∏–∫–∏",
                description=
                f'``[–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç] <–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç>`` \n**–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫–æ–±–æ—á–∫–∏ –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤**',
                color=disnake.Colour.green())
            embed.set_thumbnail(
                url=
                'https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024'
            )
            embed.add_field(name=f'/top',
                            value=f'–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø –ø–æ –±–∞–ª–∞–Ω—Å—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
                            inline=False)
            embed.add_field(name=f'/reset_economy',
                            value=f'–£–¥–∞–ª–∏—Ç—å —ç–∫–æ–Ω–æ–º–∏–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
                            inline=False)
            embed.add_field(name=f'/balance',
                            value=f'–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å',
                            inline=False)
            embed.add_field(name=f'/casino ``[—Å—Ç–∞–≤–∫–∞]``',
                            value=f'–ü–æ–∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ',
                            inline=False)
            embed.add_field(name=f'/work', 
                            value=f'–ü–æ—Ä–∞–±–æ—Ç–∞—Ç—å', 
                            inline=False)
            embed.add_field(name=f'/transfer ``[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]`` ``[c—É–º–º–∞]``',
                            value=f'–ü–µ—Ä–µ–≤–æ–¥ –¥–µ–Ω–µ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
                            inline=False)
            embed.add_field(name=f'/rob ``[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]``',
                            value=f'–û–≥—Ä–∞–±–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                            inline=False)
            embed.add_field(name=f'/crime',
                            value=f'–ü–æ–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É',
                            inline=False)
            embed.set_footer(
                text="¬© 2022, Dufl | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã –±–æ—Ç–æ–º Dodo Bot",
                icon_url=
                "https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024"
            )
            await interaction.response.send_message(embed=embed,
                                                    ephemeral=True)
        elif self.values[0] == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏':
            embed = disnake.Embed(
                title="–ö–æ–º–∞–Ω–¥—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
                description=
                f'``[–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç] <–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç>`` \n**–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫–æ–±–æ—á–∫–∏ –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤**'
            )
            embed.set_thumbnail(
                url=
                'https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024'
            )
            embed.add_field(name=f'/logs_setup ``[–∫–∞–Ω–∞–ª]``',
                            value=f'–í–∫–ª—é—á–∏—Ç—å –ª–æ–≥–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
                            inline=False)
            embed.add_field(name=f'/logs_disable', value=f'–í—ã–∫–ª—é—á–∏—Ç—å –ª–æ–≥–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ')
            embed.set_footer(
                text="¬© 2022, Dufl | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã –±–æ—Ç–æ–º Dodo Bot",
                icon_url=
                "https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024"
            )
            await interaction.response.send_message(embed=embed,
                                                    ephemeral=True)
        elif self.values[0] == '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è':
            embed = disnake.Embed(
                title="–ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
                description=
                f'``[–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç] <–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç>`` \n**–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫–æ–±–æ—á–∫–∏ –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤**'
            )
            embed.set_thumbnail(
                url=
                'https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024'
            )
            embed.add_field(name=f'/ben ``[–≤–æ–ø—Ä–æ—Å]``',
                            value=f'–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –±–µ–Ω—É',
                            inline=False)
            embed.add_field(name=f'/meme', value=f'–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π –º–µ–º')
            embed.add_field(name=f'/question ``[–≤–æ–ø—Ä–æ—Å]``',
                            value=f'–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —à–∞—Ä—É')
            embed.set_footer(
                text="¬© 2022, Dufl | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã –±–æ—Ç–æ–º Dodo Bot",
                icon_url=
                "https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024"
            )
            await interaction.response.send_message(embed=embed,
                                                    ephemeral=True)
        elif self.values[0] == '–ú–æ–¥–µ—Ä–∞—Ü–∏—è':
            embed = disnake.Embed(
                title="–ö–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
                description=
                f'``[–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç] <–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç>`` \n**–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫–æ–±–æ—á–∫–∏ –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤**',
                color=disnake.Colour.red())
            embed.set_thumbnail(
                url=
                'https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024'
            )
            embed.add_field(name=f'/ban ``[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]`` ``<–ø—Ä–∏—á–∏–Ω–∞>`` ',
                            value=f'–ó–∞–±–∞–Ω–∏—Ç—å –∫–æ–≥–æ-—Ç–æ',
                            inline=False)
            embed.add_field(name=f'/kick ``[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]`` ``<–ø—Ä–∏—á–∏–Ω–∞>`` ',
                            value=f'–ö–∏–∫–Ω—É—Ç—å –∫–æ–≥–æ-—Ç–æ',
                            inline=False)
            embed.add_field(name=f'/say ``[—Å–æ–æ–±—â–µ–Ω–∏–µ]``',
                            value=f'–ù–∞–ø–∏—Å–∞—Ç—å —á–µ—Ä–µ–∑ –±–æ—Ç–∞',
                            inline=False)
            embed.add_field(name=f'/unban ``[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]``',
                            value='–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                            inline=False)
            embed.add_field(name=f'/warn ``[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]`` ``<–ø—Ä–∏—á–∏–Ω–∞>``',
                            value='–í—ã–¥–∞—Ç—å –≤–∞—Ä–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
                            inline=False)
            embed.add_field(name=f'/unwarn ``[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]``',
                            value='–°–Ω—è—Ç—å –≤–∞—Ä–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
                            inline=False)
            embed.add_field(name=f'/warns ``[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]``',
                            value='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—Ä–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                            inline=False)
            embed.add_field(name = '/slowmode ``[—Å–µ–∫—É–Ω–¥—ã]``', 
                            value = '–ü–æ—Å—Ç–∞–≤–∏—Ç—å –º–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º',
                            inline=False)

            embed.set_footer(
                text="¬© 2022, Dufl | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã –±–æ—Ç–æ–º Dodo Bot",
                icon_url=
                "https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024"
            )
            await interaction.response.send_message(embed=embed,
                                                    ephemeral=True)
        elif self.values[0] == '–£—Ç–∏–ª–∏—Ç—ã':
            embed = disnake.Embed(
                title="–ö–æ–º–∞–Ω–¥—ã —É—Ç–∏–ª–∏—Ç—ã",
                description=
                f'``[–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç] <–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç>``\n**–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫–æ–±–æ—á–∫–∏ –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤**',
                color=disnake.Colour.blue())
            embed.set_thumbnail(
                url=
                'https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024'
            )
            embed.add_field(name=f'/info',
                            value=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ',
                            inline=False)
            embed.add_field(name=f'/avatar ``[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]``',
                            value=f'–£–∑–Ω–∞—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                            inline=False)
            embed.add_field(name=f'/userinfo',
                            value=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ',
                            inline=False)
            embed.add_field(name=f'/serverinfo',
                            value=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ',
                            inline=False)
            embed.set_footer(
                text="¬© 2022, Dufl | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã –±–æ—Ç–æ–º Dodo Bot",
                icon_url=
                "https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024"
            )
            await interaction.response.send_message(embed=embed,
                                                    ephemeral=True)
        elif self.values[0] == '–î—Ä—É–≥–æ–µ':
            embed = disnake.Embed(
                title="–î—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã",
                description=
                f'``[–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç] <–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç>``\n**–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫–æ–±–æ—á–∫–∏ –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤**',
                color=disnake.Colour.blue())
            embed.set_thumbnail(
                url=
                'https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024'
            )
            embed.add_field(name=f'/bug ``[–±–∞–≥]``',
                            value=f'–°–æ–æ–±—â–∏—Ç—å –æ –±–∞–≥–µ',
                            inline=False)
            embed.add_field(name=f'/idea ``[–∏–¥–µ—è]``',
                            value=f'–°–æ–æ–±—â–∏—Ç—å –æ –∏–¥–µ–∏',
                            inline=False)
            embed.set_footer(
                text="¬© 2022, Dufl | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã –±–æ—Ç–æ–º Dodo Bot",
                icon_url=
                "https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024"
            )
            await interaction.response.send_message(embed=embed,
                                                    ephemeral=True)


class DropdownView(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(Dropdown())

with open('json/warnings.json', 'r') as f:
    warnings = json.load(f)

tt = ['–î–∞', '–•–æ—Ö–æ—Ö–æ', '–ù–µ—Ç']
chair = ['–≠—Ç–æ —Ç–æ—á–Ω–æ üëå', '–û—á–µ–Ω—å –¥–∞–∂–µ –≤—Ä—è–¥-–ª–∏ ü§®', '–ù–µ—Ç ‚ùå', '–î–∞, –±–µ–∑—É—Å–ª–æ–≤–Ω–æ ‚úî', '–í—ã –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å –Ω–∞ —ç—Ç–æ üëå', '–í–µ—Ä–æ—è—Ç–Ω–æ ü§®', '–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞ —Ö–æ—Ä–æ—à–∞—è ü§î', '–î–∞ ‚úî', '–ó–Ω–∞–∫–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç –¥–∞ üëç', '–û—Ç–≤–µ—Ç —Ç—É–º–∞–Ω–Ω—ã–π, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ üëÄ', '–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ üëÄ', '–õ—É—á—à–µ –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç—å —Ç–µ–±–µ —Å–µ–π—á–∞—Å ü•µ', '–ù–µ –º–æ–≥—É –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å —Å–µ–π—á–∞—Å üëæ', '–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏ —Å–ø—Ä–æ—Å–∏—Ç–µ —Å–Ω–æ–≤–∞ ü§®', '–ù–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–π –Ω–∞ —ç—Ç–æ üôâ', '–ú–æ–π –æ—Ç–≤–µ—Ç - –ù–µ—Ç üòï','–ú–æ–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≥–æ–≤–æ—Ä—è—Ç –Ω–µ—Ç ü§®', '–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å üïµÔ∏è‚Äç‚ôÇÔ∏è', '–û—á–µ–Ω—å —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ ü§î']


class Slash(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.connection = sqlite3.connect('economy.db')
        self.cursor = self.connection.cursor()
        self.cache = {}
        self.cursor.execute("""
            CREATE TABLE IF NOT EXISTS users (
                user_id INTEGER PRIMARY KEY,
                guild_id INTEGER,
                balance INTEGER DEFAULT 0
            )
        """)
        self.connection.commit()
    @commands.slash_command(description='–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º')
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def help(self, ctx):
        view = DropdownView()
        embed = disnake.Embed(
            title=f'–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞',
            description=
            f'``[–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç] <–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç>``\n**–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫–æ–±–æ—á–∫–∏ –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤**',
            color=0xa84300)
        embed.set_thumbnail(
            url=
            'https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024'
        )
        embed.add_field(name=f'üèõÔ∏è –≠–∫–æ–Ω–æ–º–∏–∫–∞',
                        value=f'`/top` '
                        '`/balance` '
                        '`/casino` '
                        '`/work` '
                        '`/transfer` '
                        '`/rob` '
                        '`/crime` '
                        '`/reset_economy` ')
        embed.add_field(name=f':shield: –ú–æ–¥–µ—Ä–∞—Ü–∏—è',
                        value='`/ban` '
                        '`/kick` '
                        '`/say` '
                        '`/unban` '
                        '`/warn` '
                        '`/unwarn` '
                        '`/warns` '
                        '`/slowmode`',
                        inline=False)
       	embed.add_field(name=f':gear: –ù–∞—Å—Ç—Ä–æ–π–∫–∏', value=f'`/logs_setup` '
						f'`/logs_disable`', inline=False)
        embed.add_field(name=f':grin: –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
                        value='`/ben` '
                        '`/question` '
                        '`/meme` ',
                        inline=False)
        embed.add_field(name=f':sparkles: –£—Ç–∏–ª–∏—Ç—ã',
                        value='`/info` '
                        '`/avatar` '
                        '`/userinfo` '
                        '`/serverinfo` ',
                        inline=False)
        embed.add_field(name=f':space_invader: –î—Ä—É–≥–æ–µ',
                        value='`/idea` '
                        '`/bug` ',
                        inline=False)
        embed.set_footer(
            text="¬© 2022, Dufl | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã –±–æ—Ç–æ–º Dodo Bot",
            icon_url=
            "https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024"
        )
        await ctx.send(embed=embed, view=view)

    @commands.slash_command(description="–£–∑–Ω–∞—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    @commands.cooldown(1, 15, commands.BucketType.user)
    async def avatar(self, ctx, *, member: disnake.Member = None):
      if member is None:
        member = ctx.author
        embed = disnake.Embed(title=f"{member.name} –∞–≤–∞—Ç–∞—Ä",
                              color=disnake.Color.green())
        embed.set_image(url='{}'.format(member.display_avatar))
        embed.set_footer(
            text="¬© 2022, Dufl | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã –±–æ—Ç–æ–º Dodo Bot",
            icon_url=
            "https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024"
        )
        await ctx.send(embed=embed)
      else:
        embed = disnake.Embed(title=f"{member.name} –∞–≤–∞—Ç–∞—Ä",
                              color=disnake.Color.green())
        embed.set_image(url='{}'.format(member.display_avatar))
        embed.set_footer(
            text="¬© 2022, Dufl | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã –±–æ—Ç–æ–º Dodo Bot",
            icon_url=
            "https://cdn.discordapp.com/avatars/1097452648627703828/8209152252ebfdfd463a7e31d8a28fb4.png?size=1024"
        )
        await ctx.send(embed=embed)
    @commands.slash_command(description = '–°–æ–æ–±—â–∏—Ç—å –æ –±–∞–≥–µ')
    @commands.cooldown(1, 20, commands.BucketType.user)
    async def bug(self, ctx, *, bug):
    #  invite = await ctx.channel.create_invite(max_uses=60, unique=True)
      channel = self.bot.get_channel(1084823051813802014)
      await channel.send(
        f"**–ë–∞–≥!** <@&990626380997853204> \n**–ë–∞–≥ –æ—Ç {ctx.author}#{ctx.author.discriminator} | {ctx.author.id}.** \n**–°–µ—Ä–≤–µ—Ä:** {ctx.guild.name} | {ctx.guild.id}. \n**–ë–∞–≥:** {bug}"
    )
      await ctx.send("**–í–∞—à –±–∞–≥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!**")

    @commands.slash_command(description = '–°–æ–æ–±—â–∏—Ç—å –æ–± –∏–¥–µ–∏')
    @commands.cooldown(1, 20, commands.BucketType.user)
    async def idea(self, ctx, *, idea):
      #invite = await ctx.channel.create_invite(max_uses=60, unique=True)
      channel = self.bot.get_channel(1084821796676718592)
      await channel.send(
        f"**–ò–¥–µ—è!** <@&990626380997853204> \n**–ò–¥–µ—è –æ—Ç {ctx.author}#{ctx.author.discriminator} | {ctx.author.id}.** \n**–°–µ—Ä–≤–µ—Ä:** {ctx.guild.name} | {ctx.guild.id}. \n**–ò–¥–µ—è:** {idea}"
    )
      await ctx.send("**–í–∞—à–∞ –∏–¥–µ—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!**")

    @commands.slash_command(description = '–°–ø—Ä–æ—Å–∏—Ç—å —à–∞—Ä')
    async def question(self, ctx, *, question:str):
        if question != None:
          	emb = disnake.Embed(title = f'{question}', description=f"{random.choice(chair)}")
          	emb.set_image(url='https://sun9-15.userapi.com/impg/P2ZAiM3V4XyF-evI1sMWvnm1slzHVoXsoQNtjg/eGZsFoXfDFE.jpg?size=604x604&quality=96&sign=8055a0af19a00238cfed5e6c6d77c30c&type=album')
        await ctx.response.send_message(embed=emb)


    @commands.slash_command(description = '–°–∫–∞–∑–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞')
    @commands.default_member_permissions(ban_members=True, administrator=True)
    @commands.bot_has_permissions(manage_messages=True, administrator=True)
    async def say(self, ctx, *, text):
       if len(text) >= 1000:
         await ctx.reply(f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ–ª—å—à–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤!')
         return
       if ctx.author.bot:
          return
       if text is None:
          em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è", color=disnake.Color.red())
          await ctx.send(embed=em)
          return
       elif "@everyone" in text or "@here" in text:
           embed = disnake.Embed(title="–û—à–∏–±–∫–∞!", description="> –£–ø–æ–º–∏–Ω–∞–Ω–∏–µ **everyone** –∏–ª–∏ **here** –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ.", color=0xFF0000)
           await ctx.send(embed=embed)
       else:
           try:
              await ctx.send('–£—Å–ø–µ—à–Ω–æ', ephemeral=True)
              await ctx.send(text)
           except disnake.errors.HTTPException:
               embed = disnake.Embed(title="–û—à–∏–±–∫–∞!", description="–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.", color=0xFF0000)
               await ctx.send(embed=embed)
       

    @commands.slash_command(description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–µ–¥–ª–µ–Ω—ã–π —Ä–µ–∂–∏–º –≤ –∫–∞–Ω–∞–ª–µ')
    @commands.default_member_permissions(manage_guild=True, ban_members=True, administrator=True)
    async def slowmode(self, ctx, seconds: int):
      if ctx.author.bot:
        return
      if ctx.author.guild_permissions.administrator:
        max_slowmode = 86400 
        if seconds > max_slowmode:
          await ctx.send(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ - {max_slowmode // 3600} —á–∞—Å–æ–≤ ({max_slowmode} —Å–µ–∫—É–Ω–¥)")
          return
        await ctx.channel.edit(slowmode_delay=seconds)
        embed = disnake.Embed(title='–ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º', description=f'–ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ {seconds} —Å–µ–∫—É–Ω–¥', color=disnake.Color.blue())
        await ctx.send(embed=embed)


    @commands.slash_command(description = '–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    @commands.default_member_permissions(ban_members=True, administrator=True)
    @commands.bot_has_permissions(ban_members=True, administrator=True)
    async def ban(self, ctx, member: disnake.Member, *, reason="–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"):
       if member.bot:
          em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å –±–æ—Ç–∞!", color=disnake.Color.red())
          await ctx.send(embed=em)
          return
       if not member:
           em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –±–∞–Ω–∞.", color=disnake.Color.red())
           await ctx.send(embed=em)
           return
    
       if member == ctx.author:
           await ctx.send(f'{ctx.author.mention}, —Ç—ã –Ω–µ –º–æ–∂–µ—à—å —Å–µ–±—è –∂–µ –∑–∞–±–∞–Ω–∏—Ç—å!')
           return
    
       em = disnake.Embed(title="–ë–∞–Ω")
       em.add_field(name=f"<:maleicon:1085511328644464670> –£—á–∞—Å—Ç–Ω–∏–∫:", value=f"{member.mention}")
       em.add_field(name=f"<:Moderator:993095417027899442> –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:", value=f"{ctx.author.mention}")
       em.add_field(name=f"<:reason:1085612059200331887> –ü—Ä–∏—á–∏–Ω–∞:", value=f"{reason}")
    
       try:
          await member.ban(reason=reason)
          await ctx.send(embed=em)
       except disnake.Forbidden:
           em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –±–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–∞.", color=disnake.Color.red())
           await ctx.send(embed=em)
       except disnake.HTTPException:
           em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞.", color=disnake.Color.red())
           await ctx.send(embed=em)

    @commands.slash_command(description = '–ö–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    @commands.default_member_permissions(kick_members=True, administrator=True)
    @commands.bot_has_permissions(kick_members=True, administrator=True)
    async def kick(self, ctx, member: disnake.Member, *, reason="–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"):
       if member is None:
          em = disnake.Embed(title="–û—à–∏–±–∫–∞", description=" –£–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∫–∏–∫–Ω—É—Ç—å.", color=disnake.Color.red())
          await ctx.send(embed=em)
          return
       if member == ctx.author:
          em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!", color=disnake.Color.red())
          await ctx.send(embed=em)
          return
       if member.bot:
          em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å –±–æ—Ç–∞!", color=disnake.Color.red())
          await ctx.send(embed=em)
          return
       em = disnake.Embed(title="–ö–∏–∫")
       em.add_field(name="<:maleicon:1085511328644464670> –£—á–∞—Å—Ç–Ω–∏–∫:", value=member.mention, inline=False)
       em.add_field(name="<:Moderator:993095417027899442> –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:", value=ctx.author.mention, inline=False)
       em.add_field(name="<:reason:1085612059200331887> –ü—Ä–∏—á–∏–Ω–∞:", value=reason, inline=False)
       try:
          await member.kick(reason=reason)
          await ctx.send(embed=em)
       except disnake.Forbidden:
           em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∫–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞.", color=disnake.Color.red())
           await ctx.send(embed=em)
       except disnake.HTTPException:
           em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–ù–µ —É–¥–∞–ª–æ—Å—å –∫–∏–∫–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞.", color=disnake.Color.red())
           await ctx.send(embed=em)

    @commands.slash_command(description = '–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    @commands.default_member_permissions(ban_members=True, administrator=True)
    async def unban(self, ctx, member_id: int, *, reason="–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"):
      if ctx.author.bot:
        await ctx.send(f'{ctx.author.mention}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑–±–∞–Ω–∏—Ç—å –±–æ—Ç–∞!')
        return
    
      try:
        member = await self.bot.fetch_user(member_id)
        await ctx.guild.unban(member, reason=reason)
        em = disnake.Embed(title="–†–∞–∑–±–∞–Ω", description=f"{member.mention} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–µ–Ω!", color=disnake.Color.green())
        em.add_field(name=f"<:Moderator:993095417027899442> –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:", value=f"{ctx.author.mention}")
        em.add_field(name=f"<:reason:1085612059200331887> –ü—Ä–∏—á–∏–Ω–∞:", value=f"{reason}")
        await ctx.send(embed=em)
      except disnake.Forbidden:
        em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Ä–∞–∑–±–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–∞.", color=disnake.Color.red())
        await ctx.send(embed=em)
      except disnake.NotFound:
        em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–£–∫–∞–∑–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω.", color=disnake.Color.red())
        await ctx.send(embed=em)
      except disnake.HTTPException:
        em = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞.", color=disnake.Color.red())
        await ctx.send(embed=em)

    @commands.slash_command(description = '–í—ã–¥–∞—Ç—å –≤–∞—Ä–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    @commands.default_member_permissions(moderate_members=True, ban_members=True, administrator=True)
    async def warn(self, ctx, user: disnake.Member, *, reason='–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –Ω–µ —É–∫–∞–∑–∞–ª –ø—Ä–∏—á–∏–Ω—É.'):
      if user.bot:
        embed = disnake.Embed(title = f'–û—à–∏–±–∫–∞', description='–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –±–æ—Ç–∞!', color = disnake.Color.red())
        await ctx.send(embed = embed)
        return
      if user == ctx.author:
        embed = disnake.Embed(title = f'–û—à–∏–±–∫–∞', description='–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–µ–±—è –∂–µ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å!', color = disnake.Color.red())
        await ctx.send(embed = embed)
        return
      if str(ctx.guild.id) not in warnings:
        warnings[str(ctx.guild.id)] = {}
      if str(user.id) not in warnings[str(ctx.guild.id)]:
        warnings[str(ctx.guild.id)][str(user.id)] = 0

      warnings[str(ctx.guild.id)][str(user.id)] += 1
      with open('json/warnings.json', 'w') as f:
          json.dump(warnings, f)
      embed = disnake.Embed(description=f'–£—Å–ø–µ—à–Ω–æ! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ `{warnings[str(ctx.guild.id)][str(user.id)]}` –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.', color = disnake.Color.green())
      await ctx.send(embed = embed)

    @commands.slash_command(description = '–°–Ω—è—Ç—å –≤–∞—Ä–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    @commands.default_member_permissions(moderate_members=True, ban_members=True, administrator=True)
    async def unwarn(self, ctx, user: disnake.Member):
      if user.bot:
        embed = disnake.Embed(title = f'–û—à–∏–±–∫–∞', description='–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –±–æ—Ç–∞!', color = disnake.Color.red())
        await ctx.send(embed = embed)
        return
      if str(ctx.guild.id) in warnings and str(user.id) in warnings[str(ctx.guild.id)] and warnings[str(ctx.guild.id)][str(user.id)] > 0:
          warnings[str(ctx.guild.id)][str(user.id)] -= 1
          with open('json/warnings.json', 'w') as f:
            json.dump(warnings, f)
          embed = disnake.Embed(title = '', description=f':white_check_mark: {user.name} –±—ã–ª–æ —Å–Ω—è—Ç–æ 1 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ `{warnings[str(ctx.guild.id)][str(user.id)]}` –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.', color = disnake.Color.green())
          await ctx.send(embed = embed)
      else:
          embed = disnake.Embed(title = '–û—à–∏–±–∫–∞', description=f'{user.name} –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.', color = disnake.Color.red())
          await ctx.send(embed = embed)

    @commands.slash_command(description = '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–Ω–æ–≤')
    @commands.default_member_permissions(manage_guild=True, moderate_members=True, ban_members=True, administrator=True)
    async def warns(self, ctx, user: disnake.Member = None):
      if user is None:
        user = ctx.author

      if str(ctx.guild.id) in warnings and str(user.id) in warnings[str(ctx.guild.id)]:
          num_warnings = warnings[str(ctx.guild.id)][str(user.id)]
          embed = disnake.Embed(title = '', description=f'{user.name} –∏–º–µ–µ—Ç {num_warnings} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.')
          await ctx.send(embed = embed)
      else:
          embed = disnake.Embed(title = '–û—à–∏–±–∫–∞', description=f'{user.name} –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.', color = disnake.Color.red())
          await ctx.send(embed = embed)
    @commands.slash_command(description = '–û–±–Ω—É–ª–∏—Ç—å —ç–∫–æ–Ω–æ–º–∏–∫—É')
    @commands.default_member_permissions(manage_guild=True, administrator=True)
    async def reset_economy(self, ctx):
      def check(msg):
        return msg.author == ctx.author and msg.channel == ctx.channel

      embed = disnake.Embed(title="–°–±—Ä–æ—Å —ç–∫–æ–Ω–æ–º–∏–∫–∏", description="–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å —ç–∫–æ–Ω–æ–º–∏–∫—É –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.", color=0xff0000)
      embed.add_field(name="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", value="–ù–∞–ø–∏—à–∏—Ç–µ `–¥–∞`, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å, –∏–ª–∏ `–Ω–µ—Ç`, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å.")
      prompt = await ctx.send(embed=embed)

      try:
        msg = await self.bot.wait_for('message', timeout=15.0, check=check)
      except asyncio.TimeoutError:
        await prompt.edit(embed=disnake.Embed(description="–í—ã –Ω–µ —É—Å–ø–µ–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å. –≠–∫–æ–Ω–æ–º–∏–∫–∞ –Ω–µ –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω–∞.", color=0xff0000))
        return

      if msg.content.lower() == '–¥–∞':
        guild_id = ctx.guild.id
        self.cursor.execute("SELECT * FROM users WHERE guild_id = ?", (guild_id,))
        rows = self.cursor.fetchall()
        if len(rows) > 0:
            self.cursor.execute("DELETE FROM users WHERE guild_id = ?", (guild_id,))
            self.connection.commit()
            await prompt.edit(embed=disnake.Embed(description=f"–≠–∫–æ–Ω–æ–º–∏–∫–∞ –±—ã–ª–∞ —Å–±—Ä–æ—à–µ–Ω–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ `{ctx.guild.name}`!", color=0x00ff00))
        else:
            await prompt.edit(embed=disnake.Embed(description=f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ `{ctx.guild.name}` –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ.", color=0xff0000))
      else:
        await prompt.edit(embed=disnake.Embed(description="–≠–∫–æ–Ω–æ–º–∏–∫–∞ –Ω–µ –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω–∞.", color=0xff0000))

     
    @commands.slash_command(description = '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å')
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def balance(self, ctx):
        user_id = ctx.author.id
        guild_id = ctx.guild.id
        self.cursor.execute("SELECT balance FROM users WHERE user_id=?", (user_id,))
        result = self.cursor.fetchone()
        if result is None:
            self.cursor.execute("INSERT INTO users(user_id, guild_id) VALUES(?, ?)", (user_id, ctx.guild.id))
            self.connection.commit()
            embed = disnake.Embed(title=f'–ë–∞–ª–∞–Ω—Å {ctx.author}')
            embed.add_field(name=f'–í–∞—à –±–∞–ª–∞–Ω—Å:', value='0')
            await ctx.send(embed=embed)
        else:
            balance = result[0]
            embed = disnake.Embed(title=f'–ë–∞–ª–∞–Ω—Å {ctx.author}')
            embed.add_field(name=f'–í–∞—à –±–∞–ª–∞–Ω—Å:', value=balance)
            await ctx.send(embed=embed)
    @commands.slash_command(description = '–û–≥—Ä–∞–±–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    async def rob(self, ctx, member: disnake.Member):
      if member is None:
        await ctx.send(f"{ctx.author.mention}, –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–≥—Ä–∞–±–∏—Ç—å.")
        return
      if member == ctx.author:
        await ctx.send(f"{ctx.author.mention}, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–≥—Ä–∞–±–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.")
        return
      if member.bot:
        await ctx.send(f"{ctx.author.mention}, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–≥—Ä–∞–±–∏—Ç—å –±–æ—Ç–∞!")
        return
      user = self.cursor.execute("SELECT * FROM users WHERE user_id = ?", (ctx.author.id,)).fetchone()
      target = self.cursor.execute("SELECT * FROM users WHERE user_id = ?", (member.id,)).fetchone()
      if user is None:
        self.cursor.execute("INSERT INTO users (user_id, guild_id, balance) VALUES (?, ?, ?)", (ctx.author.id, ctx.guild.id, 0))
        self.connection.commit()
        return
      if target is None:
        await ctx.send(f"–ß–µ–ª–æ–≤–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
      if user[2] < 50:
        await ctx.send(f"{ctx.author.mention}, –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç—É –¥–ª—è –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è.")
        return
      target_balance = target[2]
      success_rate = min(target_balance / 1000, 0.9)
      if random.random() < success_rate:
        amount = min(target_balance, 800)
        self.cursor.execute("UPDATE users SET balance = balance + ? WHERE user_id = ?", (amount, ctx.author.id))
        self.cursor.execute("UPDATE users SET balance = balance - ? WHERE user_id = ?", (amount, member.id))
        self.connection.commit()
        await ctx.send(f"–í—ã —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∏ {member.mention} –∏ –ø–æ–ª—É—á–∏–ª–∏ {amount} –¥–µ–Ω–µ–≥!")
      else:
        amount = random.randint(50, 199)
        self.cursor.execute("UPDATE users SET balance = balance - ? WHERE user_id = ?", (amount, ctx.author.id))
        self.connection.commit()
        await ctx.send(f"–í—ã –Ω–µ—É–¥–∞—á–Ω–æ –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å –æ–≥—Ä–∞–±–∏—Ç—å {member.mention} –∏ –ø–æ—Ç–µ—Ä—è–ª–∏ {amount} –¥–µ–Ω–µ–≥.")
    @commands.slash_command(description = '–ü–æ–∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ')
    @commands.cooldown(1, 10, commands.BucketType.user)
    async def casino(self, ctx, bet: int):
        if bet is None:
            embed = disnake.Embed(title="–û—à–∏–±–∫–∞", description=f"{ctx.author.mention}, –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å—Ç–∞–≤–∫—É.", color=disnake.Color.red())
            await ctx.send(embed=embed)
            return
      
        user = self.cursor.execute("SELECT * FROM users WHERE user_id=?", (ctx.author.id,)).fetchone()
        if user is None:
            self.cursor.execute("INSERT INTO users (user_id, guild_id, balance) VALUES (?, ?, ?)", (ctx.author.id, ctx.guild.id, 0))
            self.connection.commit()
            user = self.cursor.execute("SELECT * FROM users WHERE user_id=?", (ctx.author.id,)).fetchone()
        if bet <= 0:
            embed = disnake.Embed(title="–û—à–∏–±–∫–∞", description=f"{ctx.author.mention}, –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.", color=disnake.Color.red())
            await ctx.send(embed=embed)
            return
        if user[2] < bet:
            embed = disnake.Embed(title="–û—à–∏–±–∫–∞", description=f"{ctx.author.mention}, –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.", color=disnake.Color.red())
            await ctx.send(embed=embed)
            return
        result = random.choices(["win", "lose"], weights=[1.8, 1], k=1)[0]
        if result == "win":
            win_amount = bet * 2
            self.cursor.execute("UPDATE users SET balance = balance + ? WHERE user_id=?", (win_amount, ctx.author.id))
            self.connection.commit()
            user = self.cursor.execute("SELECT * FROM users WHERE user_id=?", (ctx.author.id,)).fetchone()
            embed = disnake.Embed(description=f"{ctx.author.mention}, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win_amount} –¥–µ–Ω–µ–≥. –í–∞—à –±–∞–ª–∞–Ω—Å: {user[2]}", color = disnake.Color.green())
            await ctx.send(embed=embed)
        else:
            loss_amount = bet
            self.cursor.execute("UPDATE users SET balance = balance - ? WHERE user_id=?", (loss_amount, ctx.author.id))
            self.connection.commit()
            user = self.cursor.execute("SELECT * FROM users WHERE user_id=?", (ctx.author.id,)).fetchone()
            embed = disnake.Embed(description=f"{ctx.author.mention}, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {loss_amount} –¥–µ–Ω–µ–≥. –í–∞—à –±–∞–ª–∞–Ω—Å: {user[2]}", color = disnake.Color.red())
            await ctx.send(embed=embed)
    @commands.slash_command(description = '–ü–æ—Ä–∞–±–æ—Ç–∞—Ç—å')
    @commands.cooldown(1, 60, commands.BucketType.user)
    async def work(self, ctx):
        user = self.cursor.execute("SELECT * FROM users WHERE user_id = ?", (ctx.author.id,)).fetchone()
        if user is None:
            self.cursor.execute("INSERT INTO users (user_id, guild_id) VALUES (?, ?)", (ctx.author.id, ctx.guild.id))
            self.connection.commit()
            user = self.cursor.execute("SELECT * FROM users WHERE user_id = ?", (ctx.author.id,)).fetchone()

        amount = random.randint(50, 200)
        self.cursor.execute("UPDATE users SET balance = balance + ? WHERE user_id = ?", (amount, ctx.author.id))
        self.connection.commit()

        embed = disnake.Embed(title="–†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞", description=f"{ctx.author.mention}, –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {amount} –¥–µ–Ω–µ–≥.", color=disnake.Color.green())
        await ctx.send(embed=embed)
  
    @commands.slash_command(description = '–ü–æ–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É')
    @commands.cooldown(1, 360, commands.BucketType.user)
    async def crime(self, ctx):
        user_id = ctx.author.id
        self.cursor.execute("SELECT balance FROM users WHERE user_id=?", (user_id,))
        result = self.cursor.fetchone()
        if result is None:
            self.cursor.execute("INSERT INTO users(user_id, guild_id) VALUES(?, ?)", (user_id, ctx.guild.id))
            self.connection.commit()
            result = (0,)
        balance = result[0]
        success_rate = random.randint(1, 100)
        if success_rate <= 70:
            reward = random.randint(350, 1000)
            self.cursor.execute("UPDATE users SET balance=balance+? WHERE user_id=?", (reward, user_id))
            self.connection.commit()
            embed = disnake.Embed(title="–£—Å–ø–µ—Ö!", description=f"{ctx.author.mention}, –≤—ã —Å–º–æ–≥–ª–∏ —É–∫—Ä–∞—Å—Ç—å {reward} –¥–µ–Ω–µ–≥!", color=disnake.Color.green(), timestamp=ctx.message.created_at)
            embed.set_footer(text=f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance+reward}')
        else:
            fine = random.randint(100, 500)
            self.cursor.execute("UPDATE users SET balance=balance-? WHERE user_id=?", (fine, user_id))
            self.connection.commit()
            embed = disnake.Embed(title="–ü—Ä–æ–≤–∞–ª!", description=f"{ctx.author.mention}, –≤—ã –±—ã–ª–∏ –ø–æ–π–º–∞–Ω—ã –∏ –∑–∞–ø–ª–∞—Ç–∏–ª–∏ —à—Ç—Ä–∞—Ñ –≤ {fine} –¥–µ–Ω–µ–≥!.", color=disnake.Color.red(), timestamp=ctx.message.created_at)
            embed.set_footer(text=f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance-fine}')
        await ctx.send(embed=embed)

    @commands.slash_command(description = '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ø')
    @commands.cooldown(1, 3, commands.BucketType.user)
    async def top(self, ctx):
      embed = disnake.Embed(title=f"–¢–æ–ø –ø–æ –±–∞–ª–∞–Ω—Å—É —Å–µ—Ä–≤–µ—Ä–∞ {ctx.guild.name}")
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      conn = sqlite3.connect('economy.db')
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—É—Ä—Å–æ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–∞
      cursor = conn.cursor()
# –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      cursor.execute("SELECT user_id, balance FROM users WHERE guild_id=? ORDER BY balance DESC LIMIT 10", (ctx.message.guild.id,))
      top_users = cursor.fetchall()
# –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
      conn.close()

      if len(top_users) == 0:
        embed.add_field(name="–¢–æ–ø –ø—É—Å—Ç", value="–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –±–∞–ª–∞–Ω—Å–æ–º –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ")
        await ctx.send(embed=embed)
        return

# –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ —Ç–æ–ø-10 –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ Embed-–æ–±—ä–µ–∫—Ç
      for index, user in enumerate(top_users):
        disnake_user = await self.bot.fetch_user(user[0])
        embed.add_field(name=f"{index + 1}. {disnake_user.name}", value=f"{user[1]} –¥–µ–Ω–µ–≥", inline=False)
      await ctx.send(embed=embed)
  

    @commands.slash_command(description = '–ü–µ—Ä–µ–≤–æ–¥ –¥–µ–Ω–µ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    @commands.cooldown(1, 15, commands.BucketType.user)
    async def transfer(self, ctx, recipient: disnake.User, amount: int):
       if recipient.bot:
           await ctx.send(f"{ctx.author.mention}, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –±–æ—Ç—É!")
           return
       if recipient is None:
           await ctx.send(f"{ctx.author.mention}, –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.")
           return
       if amount is None:
           await ctx.send(f"{ctx.author.mention}, –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞.")
           return

       sender_id = ctx.author.id
       self.cursor.execute("SELECT * FROM users WHERE user_id=?", (sender_id,))
       sender_data = self.cursor.fetchone()
       if sender_data is None:
           self.cursor.execute("INSERT INTO users (user_id, guild_id, balance) VALUES (?, ?, ?)", (sender_id, ctx.guild.id, 0))
           self.connection.commit()
           sender_data = (sender_id, ctx.guild.id, 0)
       if amount <= 0:
           await ctx.send("–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.")
           return
       if sender_data[2] < amount:
           await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.")
           return
       if recipient == ctx.message.author:
        await ctx.send(f'{ctx.author.mention}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–∞–º–æ–º—É —Å–µ–±–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –¥–µ–Ω—å–≥–∏!')
        return

       recipient_id = recipient.id
       self.cursor.execute("SELECT * FROM users WHERE user_id=?", (recipient_id,))
       recipient_data = self.cursor.fetchone()
       if recipient_data is None:
           self.cursor.execute("INSERT INTO users (user_id, guild_id, balance) VALUES (?, ?, ?)", (recipient_id, ctx.guild.id, 0))
           self.connection.commit()
           recipient_data = (recipient_id, ctx.guild.id, 0)

       self.cursor.execute("UPDATE users SET balance = balance - ? WHERE user_id=?", (amount, sender_id))
       self.cursor.execute("UPDATE users SET balance = balance + ? WHERE user_id=?", (amount, recipient_id))
       self.connection.commit()

       transfer_embed = disnake.Embed(title="–ü–µ—Ä–µ–≤–æ–¥ –¥–µ–Ω–µ–≥", color=0x00ff00)
       transfer_embed.add_field(name="–û—Ç–ø—Ä–∞–≤–∏–ª", value=ctx.author.name, inline=True)
       transfer_embed.add_field(name="–ü–æ–ª—É—á–∞—Ç–µ–ª—å", value=recipient.name, inline=True)
       transfer_embed.add_field(name="–°—É–º–º–∞", value=amount, inline=True)
       await ctx.send(embed=transfer_embed)

    @commands.slash_command(description = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ')
    @commands.cooldown(1, 2, commands.BucketType.user)
    async def serverinfo(self, ctx):
        member = ctx.author
        server = ctx.guild
        user = await self.bot.fetch_guild(server.id)
        members_total = server.member_count
        members = sum(not member.bot for member in server.members)
        bots = sum(member.bot for member in server.members)
        channels_total = len(server.channels)
        text_channels = len(server.text_channels)
        roles = [role.name for role in member.roles]
        voice_channels = len(server.voice_channels)
        owner = server.owner
        verification_level = {
            disnake.VerificationLevel.none.value: "–ù–µ—Ç",
            disnake.VerificationLevel.low.value: "–ù–∏–∑–∫–∏–π",
            disnake.VerificationLevel.medium.value: "–°—Ä–µ–¥–Ω–∏–π",
            disnake.VerificationLevel.high.value: "–í—ã—Å–æ–∫–∏–π",
            disnake.VerificationLevel.highest.value: "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π"
        }.get(server.verification_level.value, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        created_at = int(server.created_at.timestamp())
        embed = disnake.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ **{server.name}**",
                              color=0x00ff00)
        if server.icon:
            embed.set_thumbnail(url=server.icon.url)
        if user.banner is not None:
            embed.set_image(url=user.banner.url)
        embed.add_field(
            name="–£—á–∞—Å—Ç–Ω–∏–∫–∏",
            value=
            f"<:blurplemembers:1085511354196168725> –í—Å–µ–≥–æ: {members_total}\n<:maleicon:1085511328644464670> –õ—é–¥–µ–π: {members}\n<:discordboten:1085505982387474482> –ë–æ—Ç–æ–≤: {bots}"
        )
        embed.add_field(
            name="–ö–∞–Ω–∞–ª—ã",
            value=
            f"<:discordchannels:1085506066009301084> –í—Å–µ–≥–æ: {channels_total}\n<:discordchannel:1085506036171022376> –¢–µ–∫—Å—Ç–æ–≤—ã—Ö: {text_channels}\n<:discordvoice:1085506193977516032> –ì–æ–ª–æ—Å–æ–≤—ã—Ö: {voice_channels}"
        )
        embed.add_field(name="–í–ª–∞–¥–µ–ª–µ—Ü", value=f"{owner}")
        embed.add_field(name="–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–≤–µ—Ä–∫–∏", value=f"{verification_level}")
        embed.add_field(name="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è",
                        value=f"<t:{created_at}:D>\n (<t:{created_at}:R>)")
        embed.add_field(name='ID', value=f"{server.id}")
        await ctx.send(embed=embed)

    @commands.slash_command(description = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ')
    @commands.cooldown(1, 10, commands.BucketType.user)
    async def userinfo(self, ctx, member: disnake.Member = None):
        member = member or ctx.author
        roles = [role.name for role in member.roles if role.name != "@everyone"]
        user = await self.bot.fetch_user(member.id)
        embed = disnake.Embed(
            title=f'',
            description=
            f'**–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** {member.nick or member.name}#{member.discriminator}\n**–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è:** <t:{int(member.joined_at.timestamp())}:D> (<t:{int(member.joined_at.timestamp())}:R>) \n**–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω:** <t:{int(member.created_at.timestamp())}:D> (<t:{int(member.created_at.timestamp())}:R>)\n**–†–æ–ª–∏:** {", ".join(roles)}',
            color=0x00ff00)
        embed.set_author(name=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {member.name}',
                         icon_url=member.avatar.url)
        embed.set_thumbnail(url=member.avatar.url)
        embed.add_field(name='ID', value=f"{member.id}")
        if user.banner is not None:
            embed.set_image(url=user.banner.url)
        await ctx.send(embed=embed)
def setup(bot):
  bot.add_cog(Slash(bot))